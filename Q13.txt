6
10
0 1 5
0 2 3
1 2 2
1 3 6
2 3 7
2 4 4
2 5 2
3 4 -1
3 5 1
4 5 -2

		In in = new In("Q13.txt");
		int s = Integer.parseInt("0");
		EdgeWeightedDigraph G = new EdgeWeightedDigraph(in);

		// find shortest path from s to each other vertex in DAG
		AcyclicSP sp = new AcyclicSP(G, s);

		for (int v = 0; v < G.V(); v++) {
			if (sp.hasPathTo(v)) {
				StdOut.printf("%d to %d (%.2f)  ", s, v, sp.distTo(v));
				for (DirectedEdge e : sp.pathTo(v)) {
					StdOut.print(e + "   ");
				}
				StdOut.println();
			} else {
				StdOut.printf("%d to %d         no path\n", s, v);
			}
		}